import os
import glob
import pyrat.fileutils.gpri_files as gpf
import pyrat
import pyrat.gpri_utils
from types import SimpleNamespace
import re
import json

#Include the necessary rules
include: pyrat.rules['raw_to_slc']
include: pyrat.rules['slc_to_calibrated_c']
include: pyrat.rules['geocoding']


print(config)



##############################################################################
## Check HV gain before and after calibration
rule HV_gain:
    input:
        C_HV_new = "slc_corr/20160224_130521_ABBl.mli_dec",
        C_HV_old ="slc_corr/20160224_105201_ABBl.mli_dec",
    output:
        "outputs/img/HV_gain.pdf"
    run:
        import pyrat.core.matrices as mat
        import os
        import matplotlib.pyplot as plt
        import pyrat.core.corefun as cf
        HV = gpf.gammaDataset(input.C_HV_old + '.par', input.C_HV_old)
        HV_corr = gpf.gammaDataset(input.C_HV_new + '.par', input.C_HV_new)
        ridx = config['crosspolarizer_index'][0]
        azidx =  config['crosspolarizer_index'][1] / config['range_compression']['dec']
        rwin = 10
        azwin = 30
        ptarg_zoom, rplot, azplot, mx_idx_zoom, res_dict = cf.ptarg(HV, ridx, azidx, azwin=30)
        ptarg_zoom_corr, rplot_corr, azplot_corr, mx_idx_zoom_corr, res_dict = cf.ptarg(HV_corr, ridx, azidx, azwin=30)
        HV_gain = cf.dB(ptarg_zoom_corr[mx_idx_zoom_corr] / ptarg_zoom[mx_idx_zoom])
        x_shift = 50
        with plt.style.context(config['style']):
            f, ax = plt.subplots()
            norm_plot = plt.plot(cf.dB(np.abs(azplot)), label='No shift')
            corr_plot = plt.plot(cf.dB(np.abs(azplot_corr)), label='Optimal shift')
            plt.subplot(2,1,1)
            plt.imshow(ptarg_zoom.real)
            plt.subplot(2,1,2)
            plt.imshow(ptarg_zoom_corr.real)
            plt.show()
            plt.axhline(cf.dB(np.abs(ptarg_zoom[mx_idx_zoom])), color=norm_plot[0].get_color(), linestyle='--')
            plt.axhline(cf.dB(np.abs(ptarg_zoom_corr[mx_idx_zoom_corr])), color=corr_plot[0].get_color(), linestyle='--')
            ax.arrow(mx_idx_zoom[1] + x_shift, cf.dB(np.abs(ptarg_zoom[mx_idx_zoom])),0, HV_gain)
            ax.text(mx_idx_zoom[1] + x_shift + 5, cf.dB(np.abs(ptarg_zoom[mx_idx_zoom])) + HV_gain/2, "gain {HV:.2f} dB".format(HV=HV_gain))
            ax.xaxis.set_label_text(r'azimuth samples')
            ax.yaxis.set_label_text(r'power [dB]')
            ax.set_ylim([-10,32])
            ax.grid(True)
            plt.legend(loc='lower right')
            f.subplots_adjust(bottom=0.15)
        f.savefig(output[0],pad_inches=0.1)




















